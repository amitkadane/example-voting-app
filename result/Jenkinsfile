pipeline {
   agent none
   stages {
      
      stage('build') {
	    agent{
          docker{
           image 'node:8.16-alpine'
           args '-v $HOME/.m2:/root/.m2'
          }
        }
	   
        when {
			 changeset pattern: "result/**"
	     }

         steps {
            echo 'compiling users service'
			dir('result'){
			sh 'npm install'
			}
         }
      }
    
  
      stage('test') {
	    agent{
          docker{
           image 'node:8.16-alpine'
           args '-v $HOME/.m2:/root/.m2'
          }
        }
	   

	     when {
			 changeset pattern: "result/**"
	     }

         steps {
		    echo 'running unit tests on users service'
			dir('java/cmad-ms-users'){
			sh 'npm install'
			sh 'npm test'
            }
         }
      }
  
      stage('docker-package'){
        agent any
        steps{
            echo 'Packaging users app with docker'
            script{
               docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                  def usersImage = docker.build("amitkadane/users:v${env.BUILD_ID}", "./result")
                  usersImage.push()
                  usersImage.push("latest")
               }
            }
        }
      }
    }
}

